   //קוד -פרויקט 1-אקסלרומטר-סוניה

#include<Wire.h>
#include <SoftwareSerial.h>
SoftwareSerial BTserial(11, 12); // RX | TX
int sensorPin = A0;
int sensorValue = 0;
const int MPU_addr=0x68; // I2C address of the MPU-6050
int16_t AcX,AcY,AcZ,Tmp,GyX,GyY,GyZ; //Accel readings in INT 
int buttonState = 0; 
unsigned long time;
void timeCOUNT() {
time=millis();
delay(1000);
Serial.print(time);
}
void setup(){
Wire.begin();
Wire.beginTransmission(MPU_addr);
Wire.write(0x6B); // PWR_MGMT_1 register
Wire.write(0); // set to zero (wakes up the MPU-6050)
Wire.endTransmission(true);
Serial.begin(9600);
BTserial.begin(9600);
pinMode(8, OUTPUT);
pinMode(9, INPUT);
}
void loop() {
buttonState = digitalRead(9);
Wire.beginTransmission(MPU_addr);
Wire.write(0x3B);
Wire.endTransmission(false);
Wire.requestFrom(MPU_addr,14,true); 
AcZ=Wire.read()<<8|Wire.read(); 
int val = AcZ;
delay(300);

while((AcZ<val+2000) && (AcZ>val-1000)) {
delay(1000);
Wire.beginTransmission(MPU_addr);
Wire.write(0x3B);
Wire.endTransmission(false);
Wire.requestFrom(MPU_addr,14,true); 
AcZ=Wire.read()<<8|Wire.read();

int NAcZ=map(AcZ, -30000, 30000, 1, 10);

if (NAcZ>6) {
NAcZ=6;
Serial.println(NAcZ);
}

else if (NAcZ<6) 
{
  buttonState = digitalRead(9);
Serial.println(NAcZ);
tone(8,330);
        if (buttonState == HIGH)
         { 
     Serial.println("GRANDPA OK");
     noTone(8);
     delay(100);
      exit(1);
         }
       Serial.println("waiting 30 seconds");
    
      buttonState = digitalRead(9);
       for(int i=0;i<30;i++)
        {
         do{
         buttonState = digitalRead(9);
         if (buttonState == HIGH)
           { 
         Serial.println("GRANDPA OK");
         noTone(8);
         delay(100);
         exit(1);
            }
            }while(buttonState == HIGH);
           delay(1000);
         }
       Serial.println("30 seconds throw,send massage");
          if (buttonState == LOW)
          {
          BTserial.print("grandpadown");
          BTserial.print(",");
          //BTserial.print("work");
          //BTserial.print(",");
           BTserial.print(sensorValue);
          BTserial.print(";");
          delay(20);
          }
         //timeCOUNT();
 }



}
}